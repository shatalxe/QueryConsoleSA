#Область ОписаниеПеременных
&НаКлиенте
Перем ОсновнаяФорма;
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Выражение", Выражение);	
	
	АдресХранилищаЗначений = ПоместитьВоВременноеХранилище(Новый Соответствие, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОсновнаяФорма = ПолучитьФорму("ВнешняяОбработка.КонсольЗапросовУправляемыеФормыSA.Форма");
	
	ВычислитьВыражение();
		
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеПриИзменении(Элемент)
	
	Если НаКлиенте Тогда
		ВычислитьВыражение();
	Иначе
		ВычислитьВыражениеНаСервере();	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы
&НаКлиенте
Процедура РезультатПриАктивизацииСтроки(Элемент)

	Элементы.РезультатПоказатьЗначениеВОтдельномОкне.Доступность = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;	
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипыКоллекций = Новый Массив;
	ТипыКоллекций.Добавить("Список значений");
	ТипыКоллекций.Добавить("Таблица значений");
	ТипыКоллекций.Добавить("Дерево значений");
	
	Если ТипыКоллекций.Найти(ТекущиеДанные.Тип) <> Неопределено Тогда
		Элементы.РезультатПоказатьЗначениеВОтдельномОкне.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПоказатьЗначениеВОтдельномОкне(Команда)
	
	ИдентификаторЗначения = Элементы.Результат.ТекущиеДанные.Значение;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АдресХранилищаЗначений", АдресХранилищаЗначений);
	ПараметрыФормы.Вставить("ИдентификаторЗначения", ИдентификаторЗначения);
	
	ОткрытьФорму("ВнешняяОбработка.КонсольЗапросовУправляемыеФормыSA.Форма.ФормаЗначенияВОтдельномОкне", ПараметрыФормы, ЭтаФорма, Истина);	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВычислитьВыражение()
	
	Результат.ПолучитьЭлементы().Очистить();
	
	Попытка
		
		Значение = Вычислить(Выражение);			
		ДобавитьЗначение(Результат, "Значение", Значение);
		
	Исключение
		
		Сообщить(ОписаниеОшибки())
		
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ВычислитьВыражениеНаСервере()
	
	Результат.ПолучитьЭлементы().Очистить();
	
	Попытка
		
		Значение = Вычислить(Выражение);			
		ДобавитьЗначениеНаСервере(Результат, "Значение", Значение);
		
	Исключение
		
		Сообщить(ОписаниеОшибки())
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ДобавитьЗначение(Знач Родитель, Знач Свойство, Знач Значение)

	НоваяСтрока = Родитель.ПолучитьЭлементы().Добавить();	
	НоваяСтрока.Свойство = Свойство;
	НоваяСтрока.ЗначениеПредставление = Строка(Значение);
	НоваяСтрока.Тип = ТипЗнч(Значение);
	
	Если ТипЗнч(Значение) = Тип("ДанныеФормыЭлементКоллекции")
		Или ТипЗнч(Значение) = Тип("ДанныеФормыЭлементДерева") Тогда
		
		МассивЧастей = СтрРазделить(Выражение,".[");
		ВыражениеРодителя = МассивЧастей[0]+"."+МассивЧастей[1];
		Родитель = Вычислить(ВыражениеРодителя);
		
		НоваяСтрока.Значение = ПолучитьСтруктуруСтроки(Родитель,Значение.ПолучитьИдентификатор());
		
	Иначе
		
		НоваяСтрока.Значение = Значение;
		
	КонецЕсли;
	
	Если ТипЗнч(НоваяСтрока.Значение) = Тип("Структура") Тогда
		Для Каждого КлючиЗначение Из НоваяСтрока.Значение Цикл
			ДобавитьЗначение(НоваяСтрока, КлючиЗначение.Ключ, КлючиЗначение.Значение)	
		КонецЦикла;
	КонецЕсли;

КонецФункции

&НаСервере
Процедура ДобавитьЗначениеНаСервере(Знач Родитель, Знач Свойство, Знач Значение)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	НеотображаемыеЗначения = ПолучитьИзВременногоХранилища(АдресХранилищаЗначений);
	
	Если ОбработкаОбъект.ЭтоСсылочныйТип(Значение) Тогда
		
		Если БизнесПроцессы.ТипВсеСсылкиТочекМаршрутаБизнесПроцессов().Типы().Найти(ТипЗнч(Значение)) <> Неопределено Тогда
			Возврат; // TODO нет метода Метаданные
		КонецЕсли;
		
		МетаданныеОбъекта = Значение.Метаданные();
		
		ИсточникРеквизитов = Новый Массив;
		ИсточникРеквизитов.Добавить(МетаданныеОбъекта.Реквизиты);
		ИсточникРеквизитов.Добавить(МетаданныеОбъекта.СтандартныеРеквизиты);
		
		ПодСтрока = Родитель.ПолучитьЭлементы().Добавить();	
		ПодСтрока.Значение = Значение;
		ПодСтрока.ЗначениеПредставление = Строка(Значение.УникальныйИдентификатор());
		ПодСтрока.Свойство = "Ссылка";
		ПодСтрока.Тип = ТипЗнч(ПодСтрока.Значение);

		Для Каждого Реквизиты Из ИсточникРеквизитов Цикл
			Для Каждого Реквизит Из Реквизиты Цикл
				
				ПодСтрока = Родитель.ПолучитьЭлементы().Добавить();	
				ПодСтрока.Значение = Значение[Реквизит.Имя];
				ПодСтрока.ЗначениеПредставление = Строка(ПодСтрока.Значение);
				ПодСтрока.Свойство = Реквизит.Имя;
				ПодСтрока.Тип = ТипЗнч(ПодСтрока.Значение);
				
			КонецЦикла;
		КонецЦикла;
		
		Для Каждого ТабличнаяЧасть Из МетаданныеОбъекта.ТабличныеЧасти Цикл
			
			Таблица = Значение[ТабличнаяЧасть.Имя].Выгрузить();
			Адрес = ПоместитьВоВременноеХранилище(Таблица, УникальныйИдентификатор);
			НеотображаемыеЗначения.Вставить(Адрес, Таблица);
			
			ПодСтрока = Родитель.ПолучитьЭлементы().Добавить();	
			ПодСтрока.Значение = Адрес;
			ПодСтрока.ЗначениеПредставление = Строка(Значение[ТабличнаяЧасть.Имя])+"("+Таблица.Количество()+")";
			ПодСтрока.Свойство = ТабличнаяЧасть.Имя;
			ПодСтрока.Тип = ТипЗнч(Таблица);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруСтроки(Таблица, ИдентификаторСтроки)
	
	Если ТипЗнч(Таблица) = Тип("ДанныеФормыДерево") Тогда
		Тип = Тип("ДеревоЗначений"); 	
	Иначе
		Тип = Тип("ТаблицаЗначений");
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	Колонки = ДанныеФормыВЗначение(Таблица,Тип).Колонки;
	Строка = Таблица.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Для Каждого Колонка Из Колонки Цикл
		СтруктураВозврата.Вставить(Колонка.Имя,Строка[Колонка.Имя]);
	КонецЦикла;

	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура РезультатПередРазворачиванием(Элемент, Строка, Отказ)
		
	РезультатПередРазворачиваниемНаСервере(Строка, Отказ)
	
КонецПроцедуры

&НаСервере
Процедура РезультатПередРазворачиваниемНаСервере(Строка, Отказ)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТекущаяСтрока = Результат.НайтиПоИдентификатору(Строка);
	
	//Если ТипЗнч(ТекущаяСтрока.Значение) = Тип("Структура") Тогда
		Для Каждого ПодчиненнаяСтрока Из ТекущаяСтрока.ПолучитьЭлементы() Цикл
			
			Если ЗначениеРазворачивается(ПодчиненнаяСтрока.Значение) Тогда		
				ДобавитьЗначениеНаСервере(ПодчиненнаяСтрока, ПодчиненнаяСтрока.Свойство, ПодчиненнаяСтрока.Значение)	
			КонецЕсли;
			
		КонецЦикла;
	//КонецЕсли;
	
КонецПроцедуры

Функция ЗначениеРазворачивается(Значение)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");

	Возврат ТипЗнч(Значение) = Тип("Структура") Или
				ОбработкаОбъект.ЭтоСсылочныйТип(Значение);
	
КонецФункции


#КонецОбласти
