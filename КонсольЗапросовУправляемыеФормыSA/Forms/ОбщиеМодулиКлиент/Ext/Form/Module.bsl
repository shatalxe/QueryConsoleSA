#Область ПрограммныйИнтерфейс

#Область РаботаСТекстом

&НаКлиенте
Процедура ДобавитьУбратьСимволыВНачалоТекстовогоДокумента(Элемент, НаборСимволов, РежимУдаления = Ложь) Экспорт
	
	Перем СтрНач, СтрКон, КолНач, КолКон;
	
	ДлинаСтроки = СтрДлина(НаборСимволов);
	Смещение = ?(РежимУдаления, 0, ДлинаСтроки);

	Элемент.ПолучитьГраницыВыделения(СтрНач, КолНач, СтрКон, КолКон);
	Элемент.УстановитьГраницыВыделения(СтрНач, 1, СтрКон, КолКон); // Установим на начало строки
	
	ВыделенныйТекст = Элемент.ВыделенныйТекст;
	
	// Если курсор стоит за границами текста, то предыдущие действия добавляют новый перенос
	Если Прав(Элемент.ВыделенныйТекст, 1) = Символы.ПС Тогда
		ВыделенныйТекст = Лев(Элемент.ВыделенныйТекст, СтрДлина(Элемент.ВыделенныйТекст)-1);
	КонецЕсли;
		
	ДобавитьУбратьСимволыВНачалоСтроки(ВыделенныйТекст, НаборСимволов, РежимУдаления, Смещение);
	Элемент.ВыделенныйТекст = ВыделенныйТекст;
	Элемент.УстановитьГраницыВыделения(СтрНач, Макс(1,КолНач+Смещение), СтрКон, Макс(1,КолКон+Смещение));
	  
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУбратьСимволыВНачалоСтроки(Строка, НаборСимволов, РежимУдаления = Ложь, Смещение = 0) Экспорт
	
	ЧислоСимволов = СтрДлина(НаборСимволов);		
	МассивСтрок = Вычислить("СтрРазделить(Строка, Символы.ПС)");
	
	Для Сч = 0 По МассивСтрок.Количество()-1 Цикл
		
		СтрокаИтог = МассивСтрок[Сч];
		
		Если РежимУдаления Тогда
			
			Если Вычислить("СтрНачинаетсяС(СтрокаИтог, НаборСимволов)") Тогда
				СтрокаИтог = Сред(СтрокаИтог,ЧислоСимволов+1);
			ИначеЕсли Вычислить("СтрНачинаетсяС(СокрЛ(СтрокаИтог), НаборСимволов)") Тогда
				// Найдем первое вхождение и удалим
				ПозицияНабора = Найти(СтрокаИтог,НаборСимволов);	
				СтрокаИтог = Лев(СтрокаИтог,ПозицияНабора-1)+Сред(СтрокаИтог,ПозицияНабора+1);	
			КонецЕсли;
			
			// Если изменилась последняя строка, то сместим её
			Если Сч = МассивСтрок.Количество() - 1 Тогда 
				Смещение = -ЧислоСимволов;
			КонецЕсли;
								
		Иначе		
			СтрокаИтог = НаборСимволов + МассивСтрок[Сч];
		КонецЕсли;
		
		МассивСтрок[Сч] = СтрокаИтог;
		
	КонецЦикла;
	
	Строка = Вычислить("СтрСоединить(МассивСтрок, Символы.ПС)"); 
  
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемыКлиент

&НаКлиенте
// Рассчитывает сумму, среднее и прочие показатели по числовым ячейкам табличного документа
// и показывает результаты расчетов.
// См. также СтандартныеПодсистемыКлиентСервер.РасчетЯчеек.
//
// Параметры:
//   Форма - УправляемаяФорма, Неопределено - Форма-владелец, из которой осуществляется открытие формы.
//   ТабличныйДокумент - ТабличныйДокумент - Таблица, для которой выполняются расчеты.
//   ВыделенныеОбласти - Неопределено, Массив - Необязательный. Области документа, которые требуется рассчитать.
//       Если Неопределено, то расчет будет произведен по областям, выделенным интерактивно.
//       См. возвращаемое значение функции СтандартныеПодсистемыКлиент.ВыделенныеОбласти.
//
Процедура ПоказатьРасчетЯчеек(Форма, ТабличныйДокумент, ВыделенныеОбласти = Неопределено) Экспорт
	
	Если ВыделенныеОбласти = Неопределено Тогда
		ВыделенныеОбласти = ВыделенныеОбласти(ТабличныйДокумент);
	КонецЕсли;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТабличныйДокумент", ТабличныйДокумент);
	ПараметрыФормы.Вставить("ВыделенныеОбласти", ВыделенныеОбласти);
	РежимОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ОткрытьФорму(ИмяОбработки() + ".Форма.ПоказателиВыделенныхЯчеек", ПараметрыФормы, Форма, Истина, , , , РежимОкна);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
// Формирует описание выделенных областей табличного документа, которое можно передавать на сервер.
// Служит заменой типа ВыделенныеОбластиТабличногоДокумента
// когда нужно вычислить сумму ячеек на сервере без контекста.
// См. также СтандартныеПодсистемыВызовСервера.РасчетЯчеек.
//
// Параметры:
//   ТабличныйДокумент - ТабличныйДокумент - таблица, для которой нужно сформировать описание выделенных ячеек.
//
// Возвращаемое значение: 
//   Массив - содержит структуры со свойствами:
//       * Верх  - Число - Номер строки верхней границы области.
//       * Низ   - Число - Номер строки нижней границы области.
//       * Лево  - Число - Номер колонки верхней границы области.
//       * Право - Число - Номер колонки нижней границы области.
//       * ТипОбласти - ТипОбластиЯчеекТабличногоДокумента - Колонки, Прямоугольник, Строки, Таблица.
//
Функция ВыделенныеОбласти(ТабличныйДокумент)
	Результат = Новый Массив;
	Для Каждого ВыделеннаяОбласть Из ТабличныйДокумент.ВыделенныеОбласти Цикл
		Если ТипЗнч(ВыделеннаяОбласть) <> Тип("ОбластьЯчеекТабличногоДокумента") Тогда
			Продолжить;
		КонецЕсли;
		Структура = Новый Структура("Верх, Низ, Лево, Право, ТипОбласти");
		ЗаполнитьЗначенияСвойств(Структура, ВыделеннаяОбласть);
		Результат.Добавить(Структура);
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ИмяОбработки()
	
	Позиция1 = Найти(ИмяФормы, ".");
	Позиция2 = Найти(Сред(ИмяФормы, Позиция1 + 1), ".");
	
	Возврат Лев(ИмяФормы, Позиция1 + Позиция2 - 1); 
	
КонецФункции

#КонецОбласти
