#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Параметры:
	//   Если передан параметр Расчет, то параметры ТабличныйДокумент и ВыделенныеОбласти не используются.
	//   Расчет - Структура - Результат функции СтандартныеПодсистемыКлиентСервер.РасчетЯчеек().
	//   ТабличныйДокумент - ТабличныйДокумент - Таблица, для которой выполняются расчеты.
	//   ВыделенныеОбласти - Массив - Области документа, которые требуется рассчитать.
	//       См. возвращаемое значение функции СтандартныеПодсистемыКлиент.ВыделенныеОбласти().
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Расчет = СвойствоСтруктуры(Параметры, "Расчет"); // ОбщегоНазначенияКлиентСервер
	Если ТипЗнч(Расчет) <> Тип("Структура") Тогда
		Расчет = РасчетЯчеек(Параметры.ТабличныйДокумент, Параметры.ВыделенныеОбласти); // СтандартныеПодсистемыКлиентСервер
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Расчет);
	
	РазрядностьЧисел    = Макс(0, Разрядность(Сумма), Разрядность(Минимум), Разрядность(Максимум));
	РазрядностьСреднего = Макс(РазрядностьЧисел, Разрядность(Среднее));
	
	ФорматЧисел = "ЧДЦ=" + Строка(РазрядностьЧисел) + "; ЧН=0";
	Элементы.Сумма.ФорматРедактирования    = ФорматЧисел;
	Элементы.Минимум.ФорматРедактирования  = ФорматЧисел;
	Элементы.Максимум.ФорматРедактирования = ФорматЧисел;
	Элементы.Среднее.ФорматРедактирования  = "ЧДЦ=" + Строка(РазрядностьСреднего) + "; ЧН=0";
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция Разрядность(Число)
	Возврат СтрДлина(Макс(Число,-Число)%1)-2;
КонецФункции

#Область СтандартныеПодсистемыКлиентСервер
// Рассчитывает показатели числовых ячеек в табличном документе.
// См. также ОтчетыКлиент.ВыделенныеОбласти.
//
// Параметры:
//   ТабличныйДокумент - ТабличныйДокумент - таблица, для которой требуется расчет.
//   ВыделенныеОбласти
//       - Неопределено - при вызове с клиента этот параметр будет определен автоматически.
//       - Массив - При вызове с сервера в этот параметр следует передавать области,
//           предварительно вычисленные на клиенте
//           при помощи функции ОтчетыКлиент.ВыделенныеОбласти(ТабличныйДокумент).
//
// Возвращаемое значение:
//   Структура - результаты расчета выделенных ячеек.
//       * Количество         - Число - Количество выделенных ячеек.
//       * КоличествоЧисловых - Число - Количество числовых ячеек.
//       * Сумма      - Число - Сумма выделенных ячеек с числами.
//       * Среднее    - Число - Сумма выделенных ячеек с числами.
//       * Минимум    - Число - Сумма выделенных ячеек с числами.
//       * Максимум   - Число - Максимум выделенных ячеек с числами.
//       * НуженВызовСервера - Булево - Истина когда вычисление на клиенте нецелесообразно и нужен вызов сервера.
//
Функция РасчетЯчеек(ТабличныйДокумент, ВыделенныеОбласти) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Количество", 0);
	Результат.Вставить("КоличествоНеПустых", 0);
	Результат.Вставить("КоличествоЧисловых", 0);
	Результат.Вставить("Сумма", 0);
	Результат.Вставить("Среднее", 0);
	Результат.Вставить("Минимум", Неопределено);
	Результат.Вставить("Максимум", Неопределено);
	Результат.Вставить("НуженВызовСервера", Ложь);
	
	Если ВыделенныеОбласти = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Не указано значение параметра ""ВыделенныеОбласти"".'");
	КонецЕсли;
	
	ПроверенныеЯчейки = Новый Соответствие;
	
	Для Каждого ВыделеннаяОбласть Из ВыделенныеОбласти Цикл
		Если ТипЗнч(ВыделеннаяОбласть) <> Тип("ОбластьЯчеекТабличногоДокумента")
			И ТипЗнч(ВыделеннаяОбласть) <> Тип("Структура") Тогда
			Продолжить;
		КонецЕсли;
		
		ВыделеннаяОбластьВерх  = ВыделеннаяОбласть.Верх;
		ВыделеннаяОбластьНиз   = ВыделеннаяОбласть.Низ;
		ВыделеннаяОбластьЛево  = ВыделеннаяОбласть.Лево;
		ВыделеннаяОбластьПраво = ВыделеннаяОбласть.Право;
		
		Если ВыделеннаяОбластьВерх = 0 Тогда
			ВыделеннаяОбластьВерх = 1;
		КонецЕсли;
		
		Если ВыделеннаяОбластьНиз = 0 Тогда
			ВыделеннаяОбластьНиз = ТабличныйДокумент.ВысотаТаблицы;
		КонецЕсли;
		
		Если ВыделеннаяОбластьЛево = 0 Тогда
			ВыделеннаяОбластьЛево = 1;
		КонецЕсли;
		
		Если ВыделеннаяОбластьПраво = 0 Тогда
			ВыделеннаяОбластьПраво = ТабличныйДокумент.ШиринаТаблицы;
		КонецЕсли;
		
		Если ВыделеннаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Колонки Тогда
			ВыделеннаяОбластьВерх = ВыделеннаяОбласть.Низ;
			ВыделеннаяОбластьНиз = ТабличныйДокумент.ВысотаТаблицы;
		КонецЕсли;
		
		ВыделеннаяОбластьВысота = ВыделеннаяОбластьНиз   - ВыделеннаяОбластьВерх + 1;
		ВыделеннаяОбластьШирина = ВыделеннаяОбластьПраво - ВыделеннаяОбластьЛево + 1;
		
		Результат.Количество = Результат.Количество + ВыделеннаяОбластьШирина * ВыделеннаяОбластьВысота;
		
		Если Результат.Количество >= 1000 Тогда
			Результат.НуженВызовСервера = Истина;
			Возврат Результат;
		КонецЕсли;
		
		Для НомерКолонки = ВыделеннаяОбластьЛево По ВыделеннаяОбластьПраво Цикл
			Для НомерСтроки = ВыделеннаяОбластьВерх По ВыделеннаяОбластьНиз Цикл
				Ячейка = ТабличныйДокумент.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
				Если ПроверенныеЯчейки.Получить(Ячейка.Имя) = Неопределено Тогда
					ПроверенныеЯчейки.Вставить(Ячейка.Имя, Истина);
				Иначе
					Продолжить;
				КонецЕсли;
				
				Если Ячейка.Видимость = Истина Тогда
					Если Ячейка.ТипОбласти <> ТипОбластиЯчеекТабличногоДокумента.Колонки
						И Ячейка.СодержитЗначение И ТипЗнч(Ячейка.Значение) = Тип("Число") Тогда
						Число = Ячейка.Значение;
					ИначеЕсли ЗначениеЗаполнено(Ячейка.Текст) Тогда
						ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
						Число = ОписаниеТипаЧисло.ПривестиЗначение(Ячейка.Текст);
					Иначе
						Продолжить;
					КонецЕсли;
					Результат.КоличествоНеПустых = Результат.КоличествоНеПустых + 1;
					Если ТипЗнч(Число) = Тип("Число") Тогда
						Результат.КоличествоЧисловых = Результат.КоличествоЧисловых + 1;
						Результат.Сумма = Результат.Сумма + Число;
						Если Результат.КоличествоЧисловых = 1 Тогда
							Результат.Минимум  = Число;
							Результат.Максимум = Число;
						Иначе
							Результат.Минимум  = Мин(Число,  Результат.Минимум);
							Результат.Максимум = Макс(Число, Результат.Максимум);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если Результат.КоличествоЧисловых > 0 Тогда
		Результат.Среднее = Результат.Сумма / Результат.КоличествоЧисловых;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
#КонецОбласти

#Область ОбщегоНазначенияКлиентСервер
&НаКлиентеНаСервереБезКонтекста
// Возвращает значение свойства структуры.
//
// Параметры:
//   Структура - Структура, ФиксированнаяСтруктура - Объект, из которого необходимо прочитать значение ключа.
//   Ключ - Строка - Имя свойства структуры, для которого необходимо прочитать значение.
//   ЗначениеПоУмолчанию - Произвольный - Необязательный. Возвращается когда в структуре нет значения по указанному
//                                        ключу.
//       Для скорости рекомендуется передавать только быстро вычисляемые значения (например примитивные типы),
//       а инициализацию более тяжелых значений выполнять после проверки полученного значения (только если это
//       требуется).
//
// Возвращаемое значение:
//   Произвольный - Значение свойства структуры. ЗначениеПоУмолчанию если в структуре нет указанного свойства.
//
Функция СвойствоСтруктуры(Структура, Ключ, ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	Если Структура = Неопределено Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Результат = ЗначениеПоУмолчанию;
	Если Структура.Свойство(Ключ, Результат) Тогда
		Возврат Результат;
	Иначе
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	
КонецФункции
#КонецОбласти

#КонецОбласти